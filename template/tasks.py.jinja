# this tasks can be used by Python invoke command
# $ invoke start
# or short
# $ inv start

from invoke import task
import os

@task
def start(ctx):
    print("starting Plone")
    ctx.run("uv run runwsgi instance/etc/zope.ini")

{% if db_storage == 'zeo' %}
@task
def client1_start(ctx):
    print("starting Plone ZEO client 1")
    ctx.run("uv run runwsgi instance1/etc/zope.ini")

@task
def client2_start(ctx):
    print("starting Plone ZEO client 2")
    ctx.run("uv run runwsgi instance2/etc/zope.ini")

@task
def zeo_start(ctx):
    print("starting ZEO Server")
    ctx.run("uv run runzeo -C zeo_server/etc/zeo.conf")
{% endif %}

@task
def generate_zope_conf(ctx):
    # Get the absolute path of the directory containing tasks.py
    base_dir = os.path.dirname(os.path.abspath(__file__))

    with open(os.path.join(base_dir, "instance", "etc", "zope.conf.tpl"), "r") as f:
        template = f.read()
    conf = template.replace("<<BASE_PATH>>", base_dir)
    with open(os.path.join(base_dir, "instance", "etc", "zope.conf"), "w") as f:
        f.write(conf)
    print(f"zope.conf generated with base path: {base_dir}")

@task
def install(ctx):
    print("installing Plone")
    ctx.run("uv sync")

    print("generating zope.conf")
    generate_zope_conf(ctx)


@task
def backup(ctx):
    ctx.run("./backup.sh")


@task
def backup_restore(ctx):
    ctx.run("./backup-restore.sh")
